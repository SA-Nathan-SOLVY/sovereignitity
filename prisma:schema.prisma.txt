generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  vaRating    Int?
  monthlyVA   Float    @default(3751.59)
  stripeCustomerId String?
  stripeFinancialAccountId String?
  stripeAccountNumber String?
  stripeRoutingNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  policies    Policy[]
  incomeStreams IncomeStream[]
  expenses    Expense[]
  budgets     Budget[]
  loanRequests LoanRequest[]

  @@map("users")
}

model Policy {
  id          String   @id @default(cuid())
  userId      String
  company     String   @default("OneAmerica")
  policyNumber String
  cashValue   Float    @default(8826.35)
  deathBenefit Float   @default(122844.40)
  availableLoan Float  @default(8414.76)
  interestRate Float   @default(5.37)
  premiumAmount Float  @default(315.00)
  puaPremium   Float   @default(685.00)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  loanRequests LoanRequest[]

  @@map("policies")
}

model IncomeStream {
  id          String   @id @default(cuid())
  userId      String
  source      String
  amount      Float
  frequency   String
  account     String
  lastPayment DateTime
  nextPayment DateTime?
  routingInstructions Json?
  status      String   @default("active")
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("income_streams")
}

model Expense {
  id          String   @id @default(cuid())
  userId      String
  name        String
  category    String
  amount      Float
  interestRate Float?
  minimumPayment Float?
  dueDate     String?
  status      String   @default("active")
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("expenses")
}

model Budget {
  id          String   @id @default(cuid())
  userId      String
  month       String
  totalIncome Float    @default(5751.59)
  totalExpenses Float
  netCashFlow Float
  savingsRate Float
  createdAt   DateTime @default(now())
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  budgetItems BudgetItem[]

  @@map("budgets")
}

model BudgetItem {
  id          String   @id @default(cuid())
  budgetId    String
  category    String
  planned     Float
  actual      Float?
  
  budget      Budget   @relation(fields: [budgetId], references: [id], onDelete: Cascade)

  @@map("budget_items")
}

model LoanRequest {
  id          String   @id @default(cuid())
  policyId    String
  amount      Float
  purpose     String
  status      String   @default("draft")
  destinationAccount String
  submittedAt DateTime?
  fundedAt    DateTime?
  stripeFinancialAccountId String?
  submissionMethods Json?
  
  policy      Policy   @relation(fields: [policyId], references: [id], onDelete: Cascade)

  @@map("loan_requests")
}